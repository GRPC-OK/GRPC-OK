name: Run Semgrep

on:
  workflow_dispatch:
    inputs:
      versionId:
        required: true
      callbackUrl:
        required: true
      repo:
        required: true
      ref:
        required: true

jobs:
  semgrep:
    runs-on: ubuntu-latest

    steps:
      - name: Clone target repository
        env:
          GH_TOKEN: ${{ secrets.INTELLISIA_GITHUB_TOKEN }}  
        run: |
          git clone --branch ${{ github.event.inputs.ref }} \
            https://$GH_TOKEN@github.com/${{ github.event.inputs.repo }} target-repo

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Semgrep
        run: pip install semgrep

      - name: Run Semgrep and save SARIF
        id: semgrep
        run: |
          mkdir -p output
          cd target-repo
          if semgrep --config=p/default --sarif > ../output/full.sarif 2> ../output/error.log; then
            echo "status=success" >> $GITHUB_OUTPUT
          else
            echo "status=fail" >> $GITHUB_OUTPUT
          fi
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload SARIF or Error Log to S3
        id: upload
        run: |
          VERSION_ID="${{ github.event.inputs.versionId }}"
          BUCKET="${{ secrets.S3_BUCKET_NAME }}"
          REGION="${{ secrets.AWS_REGION }}"
          STATUS="${{ steps.semgrep.outputs.status }}"

          if [ "$STATUS" = "success" ]; then
            TARGET_FILE="full.sarif"
            TARGET_PATH="code-analysis/version-$VERSION_ID/$TARGET_FILE"
          else
            TARGET_FILE="error.log"
            TARGET_PATH="code-analysis/version-$VERSION_ID/$TARGET_FILE"
          fi

          aws s3 cp "output/$TARGET_FILE" "s3://$BUCKET/$TARGET_PATH"

          PUBLIC_URL="https://$BUCKET.s3.$REGION.amazonaws.com/$TARGET_PATH"

          echo "url=$PUBLIC_URL" >> $GITHUB_OUTPUT
          echo "Uploaded: $PUBLIC_URL"


      - name: Notify Backend
        run: |
          curl -X POST "${{ github.event.inputs.callbackUrl }}" \
            -H "Content-Type: application/json" \
            -d '{
              "status": "'${{ steps.semgrep.outputs.status }}'",
              "fileUrl": "'${{ steps.upload.outputs.url }}'"
            }'

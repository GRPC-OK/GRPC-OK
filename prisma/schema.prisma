generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") // .env 파일에서 설정할 것입니다.
}

// 사용자
model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  avatarUrl String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  projects      Project[]             @relation("ProjectOwner")
  versions      Version[]
  contributions ProjectContributors[]
}

// 프로젝트
model Project {
  id                Int      @id @default(autoincrement())
  name              String
  namespace         String
  description       String
  repository        String   @unique
  githubUrl         String
  domain            String   @unique
  cpuMemory         String   // 예: "small", "medium", "large"
  replicas          Int
  ingressConfig     Json?
  serviceConfig     Json?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  owner             User     @relation("ProjectOwner", fields: [ownerId], references: [id])
  ownerId           Int

  contributors      ProjectContributors[]
  versions          Version[]
  defaultHelmValues Json?
}

// 프로젝트 기여자
model ProjectContributors {
  id        Int     @id @default(autoincrement())
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
  project   Project @relation(fields: [projectId], references: [id])
  projectId Int

  @@unique([userId, projectId])
}

// 버전
model Version {
  id                Int      @id @default(autoincrement())
  name              String
  description       String
  isCurrent         Boolean  @default(false)
  imageTag          String
  branch            String
  commitHash        String
  applicationName   String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  codeStatus        StepStatus    @default(none)
  buildStatus       StepStatus    @default(none)
  imageStatus       StepStatus    @default(none)
  deployStatus      StepStatus    @default(none)
  approveStatus     ApproveStatus @default(none)
  flowStatus        FlowStatus    @default(none)

  helmValues        HelmValues?   @relation(name: "VersionHelmRelation", fields: [helmValuesId], references: [id])
  helmValuesId      Int?          @unique

  project           Project       @relation(fields: [projectId], references: [id])
  projectId         Int
  author            User          @relation(fields: [authorId], references: [id])
  authorId          Int

  @@unique([projectId, name])
}

model HelmValues {
  id        Int      @id @default(autoincrement())
  content   Json
  createdAt DateTime @default(now())
  version   Version? @relation(name: "VersionHelmRelation")
}

// Enum 타입들
enum StepStatus {
  none
  pending
  success
  fail
}

enum ApproveStatus {
  none
  pending
  approved
  rejected
}

enum FlowStatus {
  none
  pending
  success
  fail
}